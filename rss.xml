<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>V</title>
        <subtitle></subtitle>
        <icon>http://yjfyqfzs.github.io/images/favicon.ico</icon>
        <link>http://yjfyqfzs.github.io</link>
        <author>
          <name>yihanW</name>
        </author>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 28 May 2024 11:10:00 +0800</pubDate>
        <lastBuildDate>Tue, 28 May 2024 11:10:00 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2024/05/28/ARFoundationUnity/</guid>
            <title>基于ARFoundation的平面检测AR应用</title>
            <link>http://yjfyqfzs.github.io/2024/05/28/ARFoundationUnity/</link>
            <pubDate>Tue, 28 May 2024 11:10:00 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;c0009ecbb0adf62799ffc3a69711b1d9bf7196c5daae4e515458272b75398516&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2024/02/23/UE%E5%AF%BC%E5%85%A5%E8%BF%9E%E6%8E%A5%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE/</guid>
            <title>ue读取或连接外部数据</title>
            <link>http://yjfyqfzs.github.io/2024/02/23/UE%E5%AF%BC%E5%85%A5%E8%BF%9E%E6%8E%A5%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE/</link>
            <pubDate>Fri, 23 Feb 2024 10:33:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;本文总结了 UE 读取 CSV/TXT/JSON 数据和连接 MySQL 数据库的方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 直接导入 CSV 文件&lt;/strong&gt;&lt;br&gt;
 UE 中可以直接导入 &lt;code&gt;.csv&lt;/code&gt;  格式的文件。&lt;br&gt;
新建结构体，在结构体中设置字段，再将 &lt;code&gt;.csv&lt;/code&gt;  文件直接拖入资源管理器，导入为 &lt;code&gt;DataTable&lt;/code&gt;  即可。&lt;br&gt;
注意，若结构体中有 &lt;code&gt;Vector&lt;/code&gt;  类型，对应的 &lt;code&gt;.csv&lt;/code&gt;  文件数据需要写为 &lt;code&gt;(X=...,Y=...,Z=...)&lt;/code&gt;  才能正确导入。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2024/02/23/UE%E5%AF%BC%E5%85%A5%E8%BF%9E%E6%8E%A5%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE/img1.png&#34; width=&#34;600&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2. 插件动态读写 CSV/TXT/JSON 文件&lt;/strong&gt;&lt;br&gt;
新建 UE 蓝图函数库插件，创建过程参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95amZ5cXN6cy5naXRodWIuaW8vMjAyMy8wMS8xOC91ZXBsdWcv&#34;&gt;之前的文章&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;CSV&lt;/code&gt;  和 &lt;code&gt;JSON&lt;/code&gt;  文件读写参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNTg3MTQ0OTU=&#34;&gt;文章&lt;/span&gt;， &lt;code&gt;DataTable&lt;/code&gt;  相关函数在引擎源码的 &lt;code&gt;DataTable.h&lt;/code&gt;  和 &lt;code&gt;DataTableFunctionLibrary.h&lt;/code&gt;  中找， &lt;code&gt;AddRow&lt;/code&gt;  函数定义如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UMyDataFuncBPLibrary::AddRow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(UDataTable* DataTable, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FName&amp;amp; RowName, &lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; FMycppstruc&amp;amp; Rowdata)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!DataTable)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;UE_LOG&lt;/span&gt;(LogDataTable, Error, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;AddRow DataTable error&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	DataTable-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;AddRow&lt;/span&gt;(RowName, Rowdata);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中由于 UE C++ 中无法使用模板函数，需要先自定义结构体 &lt;code&gt;Mycppstruc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 插件连接 MySQL&lt;/strong&gt;&lt;br&gt;
 安装配置 MySQL 步骤参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzQyMzQ4NC9hcnRpY2xlL2RldGFpbHMvMTI0NDA4NTY1&#34;&gt; Windows 配置 MySQL&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;连接 MySQL 用 &lt;code&gt;MySQL Connector/c++&lt;/code&gt;  实现，将其作为第三方库引入 UE，创建第三方库插件流程参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly95amZ5cXN6cy5naXRodWIuaW8vMjAyMy8wMS8xOC91ZXBsdWcv&#34;&gt;之前的文章&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;把 &lt;code&gt;MySQL Connector/c++&lt;/code&gt;  安装后解压文件夹里的 &lt;code&gt;include\jdbc&lt;/code&gt;  和 &lt;code&gt;libcrypto-1_1-x64.dll&lt;/code&gt; , &lt;code&gt;libssl-1_1-x64.dll&lt;/code&gt; , &lt;code&gt;mysqlcppconn-static.lib&lt;/code&gt;  拷贝至新建的插件第三方库目录。&lt;/p&gt;
&lt;p&gt;去掉 &lt;code&gt;\include\cppconn\driver.h&lt;/code&gt;  中的宏声明：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;undef&lt;/span&gt; check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;CPPCONN_PUBLIC_FUNC &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::string &amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;CPPCONN_PUBLIC_FUNC &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;check&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;const&lt;/span&gt; std::map&amp;lt;std::string,std::string&amp;gt; &amp;amp;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;并在该头文件结尾添加：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;ifndef&lt;/span&gt; check&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; check(expr)				UE_CHECK_IMPL(expr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用该库时，头文件如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;define&lt;/span&gt; STATIC_CONCPP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;mysql_driver.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;cppconn/prepared_statement.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;cppconn/driver.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;cppconn/exception.h&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;自定义蓝图可调用函数时，涉及 &lt;code&gt;FString&lt;/code&gt;  和 &lt;code&gt;string&lt;/code&gt;  格式的转换，参考文章&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NDg3MTM3Mzc=&#34;&gt; UE4_最全 FString 字符串与各格式转换输出&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/10/20/Oculus/</guid>
            <title>Oculus恢复出厂设置与联网激活</title>
            <link>http://yjfyqfzs.github.io/2023/10/20/Oculus/</link>
            <pubDate>Fri, 20 Oct 2023 22:37:11 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;近期因不明原因无法在收的二手 quest2 里切换自己的账号，恢复出厂设置重新激活。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;恢复出厂设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;关机后长按电源和音量减键 5 秒左右，按音量键上下选择 &lt;code&gt;Factory reset&lt;/code&gt; 。重新启动后需要使用手机 Oculus App 进行配对，按头盔中的提示操作即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;联网&lt;/strong&gt;&lt;br&gt;
由于 quest2 需要科学上网，此处使用电脑开启热点，quest2 连接电脑热点。&lt;/p&gt;
&lt;p&gt;点击 &lt;code&gt;Manage&lt;/code&gt;  后安装组件至 &lt;code&gt;Service Mode&lt;/code&gt;  旁的图标为绿色，打开 &lt;code&gt;TUN Mode&lt;/code&gt; 。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/10/20/Oculus/img1.png&#34;&gt; &lt;/div&gt;
此时在电脑搜索框中搜 “网络连接”，出现clash虚拟网卡。
&lt;p&gt;以管理员身份运行 &lt;code&gt;cmd&lt;/code&gt; ，输入命令 &lt;code&gt;netsh wlan set hostednetwork mode=allow&lt;/code&gt;  和 &lt;code&gt;netsh wlan set hostednetwork ssid=*wifi名称* key=*wifi密码*&lt;/code&gt;  设置热点密码，输入 &lt;code&gt;netsh wlan start hostednetwork&lt;/code&gt;  开启热点。此外也可以直接在&lt;strong&gt;网络和 Internet - 移动热点&lt;/strong&gt;中开启。&lt;/p&gt;
&lt;p&gt;此时出现虚拟连接&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/10/20/Oculus/img2.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;右键 &lt;code&gt;clash&lt;/code&gt;  选择 &lt;code&gt;属性&lt;/code&gt; ，设置共享，即可用 quest2 连接电脑热点。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/10/20/Oculus/img3.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;其他 tips&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Oculus 电脑端软件界面卡住不动：&lt;/strong&gt; 改 Host 文件。&lt;br&gt;
&lt;strong&gt;头盔连接电脑找不到盘符：&lt;/strong&gt; 在头盔的 &lt;code&gt;通知&lt;/code&gt; 中查找 &lt;code&gt;USB&lt;/code&gt;  相关通知并开启。&lt;br&gt;
&lt;strong&gt;开启开发者模式：&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXIub2N1bHVzLmNvbS9tYW5hZ2UvdmVyaWZ5Lw==&#34;&gt;https://developer.oculus.com/manage/verify/&lt;/span&gt; 选择双重认证，移动手机号可用。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/08/23/StreamlitGradio/</guid>
            <title>streamlit与gradio使用对比</title>
            <link>http://yjfyqfzs.github.io/2023/08/23/StreamlitGradio/</link>
            <pubDate>Wed, 23 Aug 2023 13:43:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;近期分别使用 streamlit 和 gradio 搭建界面，这两者均用于使开发者快速制作演示 demo，避免使用复杂的前端框架。其中，streamlit 常用于数据分析，内置组件多，gradio 作为 hugging face 的一部分，模型加载简单，常用于深度学习相关领域。&lt;/p&gt;
&lt;h3 id=&#34;运行方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#运行方式&#34;&gt;#&lt;/a&gt; 运行方式&lt;/h3&gt;
&lt;p&gt;streamlit 运行时，需要在 cmd 中运行 &lt;code&gt;streamlit run xxx.py&lt;/code&gt; ，此时 streamlit 会在本地启动一个 web 服务器，并自动打开 web 浏览器，代码更新时无需重新运行，刷新浏览器即可更新界面。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; streamlit &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; st&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;run_st&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;###streamlit界面定义写在函数里&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;run_st()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如需更改界面颜色配置，在项目目录中新建 &lt;code&gt;.streamlit&lt;/code&gt;  文件夹，新建文件 &lt;code&gt;config.toml&lt;/code&gt; , 设置主题&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[theme]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;primaryColor=&lt;span class=&#34;string&#34;&gt;&amp;quot;#F63366&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;backgroundColor=&lt;span class=&#34;string&#34;&gt;&amp;quot;#0E1117&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;secondaryBackgroundColor=&lt;span class=&#34;string&#34;&gt;&amp;quot;#262730&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;textColor=&lt;span class=&#34;string&#34;&gt;&amp;quot;#FAFAFA&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;font=&lt;span class=&#34;string&#34;&gt;&amp;quot;sans serif&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;gradio 可以在 IDE 中运行，开发者在浏览器中输入本地地址和端口号显示界面，代码更新时需要在 IDE 中运行才能更新界面。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; gradio &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; gr&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; gr.Blocks(title=&lt;span class=&#34;string&#34;&gt;&amp;quot;XXX&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; demo:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;###gradio界面定义写在此处&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;demo.launch()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;基本组件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本组件&#34;&gt;#&lt;/a&gt; 基本组件&lt;/h3&gt;
&lt;p&gt;streamlit 和 gradio 都默认按行排列，若需要排成列，则分别使用以下语句：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;col1,col2,col3=st.columns(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##col1.write(&amp;quot;xxx&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;##col2.write(&amp;quot;xxx&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; gr.Row():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#排成列的组件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sub_btn=gr.Button(&lt;span class=&#34;string&#34;&gt;&amp;quot;Submit&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clc_btn=gr.Button(&lt;span class=&#34;string&#34;&gt;&amp;quot;Clear&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;streamlit 和 gradio 均包含 &lt;code&gt;button&lt;/code&gt; , &lt;code&gt;radio&lt;/code&gt; , &lt;code&gt;checkbox&lt;/code&gt;  等基本组件，但 streamlit 使用 &lt;code&gt;file_uploader&lt;/code&gt;  上传的文件存储在缓存中，无法获取文件在本地的原始路径！！，如需再次保存可采用以下方法&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save_uploaded_file&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;uploaded_file, save_path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(save_path, &lt;span class=&#34;string&#34;&gt;&amp;quot;wb&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        f.write(uploaded_file.getbuffer())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;image=st.file_uploader(&lt;span class=&#34;string&#34;&gt;&amp;quot;Upload Image&amp;quot;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=[&lt;span class=&#34;string&#34;&gt;&amp;quot;jpg&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;png&amp;quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; image &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    img_path=image.name&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    save_uploaded_file(image, img_path)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;streamlit 每次修改组件内容后会从头到尾运行所有代码，用 &lt;code&gt;text_area&lt;/code&gt;  时无法直接在文本框内更新文字，只能文本框消失后又重新显示，要保存中间数据时可使用 &lt;code&gt;@st.cache&lt;/code&gt;  装饰器来装饰函数，或使用 &lt;code&gt;session_state&lt;/code&gt; 。gradio 可以通过 &lt;code&gt;update&lt;/code&gt;  函数更新文本框内容。&lt;/p&gt;
&lt;p&gt;gradio 个性化定制程度低，在定义 &lt;code&gt;button&lt;/code&gt;  的回调函数时，输入参数必须为 gradio 组件，在函数调用时会自动提取组件的内容如字符串等。&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pro_box=gr.CheckboxGroup(pro_lis,label=&lt;span class=&#34;string&#34;&gt;&amp;quot;xxx&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_box=gr.Textbox(label=&lt;span class=&#34;string&#34;&gt;&amp;quot;add_tag&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_new=gr.Button(&lt;span class=&#34;string&#34;&gt;&amp;quot;add&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#定义update_tag函数时，输入为str类型，输出为pro_box.update(choices=pro_lis,value=[]),若输出非pro_box则组件不会更新&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;add_new.click(fn=update_tag,inputs=[add_box],outputs=[pro_box])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/07/13/Langchain%E7%9B%B8%E5%85%B3%E5%BA%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</guid>
            <title>Langchain相关库使用笔记</title>
            <link>http://yjfyqfzs.github.io/2023/07/13/Langchain%E7%9B%B8%E5%85%B3%E5%BA%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</link>
            <pubDate>Thu, 13 Jul 2023 07:43:03 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;chatgpt-api基本调用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#chatgpt-api基本调用&#34;&gt;#&lt;/a&gt; ChatGPT API 基本调用&lt;/h2&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_completion&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;prompt, model=&lt;span class=&#34;string&#34;&gt;&amp;quot;gpt-3.5-turbo&amp;quot;&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    messages = [&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;role&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;user&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;: prompt&amp;#125;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    response = openai.ChatCompletion.create(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        model=model,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        messages=messages,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; response.choices[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].message[&lt;span class=&#34;string&#34;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#token相关&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    token_dict = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;prompt_tokens&amp;#x27;&lt;/span&gt;:response[&lt;span class=&#34;string&#34;&gt;&amp;#x27;usage&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;prompt_tokens&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;completion_tokens&amp;#x27;&lt;/span&gt;:response[&lt;span class=&#34;string&#34;&gt;&amp;#x27;usage&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;completion_tokens&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;total_tokens&amp;#x27;&lt;/span&gt;:response[&lt;span class=&#34;string&#34;&gt;&amp;#x27;usage&amp;#x27;&lt;/span&gt;][&lt;span class=&#34;string&#34;&gt;&amp;#x27;total_tokens&amp;#x27;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#moderation相关:https://platform.openai.com/docs/guides/moderation/overview，用于辨别有害信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response = openai.Moderation.create(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Here&amp;#x27;s the plan.  We get the warhead, &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;and we hold the world ransom...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;...FOR ONE MILLION DOLLARS!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;moderation_output = response[&lt;span class=&#34;string&#34;&gt;&amp;quot;results&amp;quot;&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(moderation_output)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;langchain使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#langchain使用&#34;&gt;#&lt;/a&gt; Langchain 使用&lt;/h2&gt;
&lt;p&gt;Langchain 是一个能够连接外部数据源与 LLM 模型的库，目前几乎所有需要结合本地数据库调用 LLM 模型接口的应用都基于 Langchain 实现。其调用流程如下图，本地数据导入后经过分割存储在向量库中，在提问时先从向量库中搜索相似的片段，作为描述词的上下文与用户自定义的描述词拼接作为 LLM 模型的输入。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/07/13/Langchain%E7%9B%B8%E5%85%B3%E5%BA%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/img1.png&#34; width=&#34;800&#34;&gt; &lt;/div&gt;
&lt;h3 id=&#34;常用格式文件的加载方式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#常用格式文件的加载方式&#34;&gt;#&lt;/a&gt; 常用格式文件的加载方式&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PDF&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.document_loaders &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; PyPDFLoader&lt;span class=&#34;comment&#34;&gt;#需要先下载pypdf模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;loader = PyPDFLoader(&lt;span class=&#34;string&#34;&gt;&amp;quot;test.pdf&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pages = loader.load()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;pages&lt;/code&gt;  为列表，每一页是一个 &lt;code&gt;Document&lt;/code&gt; ，注意页数不一定与 pdf 页数相同。每个 &lt;code&gt;Document&lt;/code&gt;  包括 &lt;code&gt;page_content&lt;/code&gt;  (该页所有文本) 和 &lt;code&gt;metadata&lt;/code&gt;  (该页信息)，如下图所示&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/07/13/Langchain%E7%9B%B8%E5%85%B3%E5%BA%93%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/img2.png&#34; width=&#34;400&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;txt 或 md&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.document_loaders &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; TextLoader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;loader = TextLoader(&lt;span class=&#34;string&#34;&gt;&amp;quot;test.txt&amp;quot;&lt;/span&gt;,encoding=&lt;span class=&#34;string&#34;&gt;&amp;#x27;utf8&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#loader = TextLoader(&amp;quot;test.md&amp;quot;,encoding=&amp;#x27;utf8&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;documents = loader.load()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此时 &lt;code&gt;documents&lt;/code&gt;  中只包含一个 &lt;code&gt;Document&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;除了以上几种格式加载外，Langchain 还有 &lt;code&gt;DirectoryLoader&lt;/code&gt; , &lt;code&gt;CSVLoader&lt;/code&gt; , &lt;code&gt;JSONLoader&lt;/code&gt;  等模块。&lt;/p&gt;
&lt;h3 id=&#34;文本分割&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#文本分割&#34;&gt;#&lt;/a&gt; 文本分割&lt;/h3&gt;
&lt;p&gt;Langchain 中对于一般文本使用 &lt;code&gt;RecursiveCharacterTextSplitter&lt;/code&gt;  或 &lt;code&gt;CharacterTextSplitter&lt;/code&gt;  分割，推荐使用 &lt;code&gt;RecursiveCharacterTextSplitter&lt;/code&gt; ，使用方式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.text_splitter &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; RecursiveCharacterTextSplitter&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chunk_size =&lt;span class=&#34;number&#34;&gt;26&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#分割每块的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chunk_overlap = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#与上文重叠的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r_splitter = RecursiveCharacterTextSplitter(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    chunk_size=chunk_size,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    chunk_overlap=chunk_overlap,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    separators=[&lt;span class=&#34;string&#34;&gt;&amp;quot;\n\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;]&lt;span class=&#34;comment&#34;&gt;#分割符号，可不加此参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#分割string类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;text1 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;abcdefghijklmnopqrstuvwxyz&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r_splitter.split_text(text1)&lt;span class=&#34;comment&#34;&gt;#返回string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#分割导入的文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docspl=r_splitter.split_documents(documents)&lt;span class=&#34;comment&#34;&gt;#返回Document类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此外还可以使用 &lt;code&gt;TokenTextSplitter&lt;/code&gt;  拆分，将以上代码中 &lt;code&gt;RecursiveCharacterTextSplitter&lt;/code&gt;  替换为 &lt;code&gt;TokenTextSplitter&lt;/code&gt;  即可。对于具有特定头结构的文件，可使用 &lt;code&gt;MarkdownHeaderTextSplitter&lt;/code&gt;  拆分。&lt;/p&gt;
&lt;p&gt;对于中文文本，可以使用阿里达摩院的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tb2RlbHNjb3BlLmNuL21vZGVscy9kYW1vL25scF9iZXJ0X2RvY3VtZW50LXNlZ21lbnRhdGlvbl9jaGluZXNlLWJhc2UvcXVpY2tzdGFydA==&#34;&gt;通用语义分割模型&lt;/span&gt;进行文本分割。&lt;/p&gt;
&lt;h3 id=&#34;构建向量库&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构建向量库&#34;&gt;#&lt;/a&gt; 构建向量库&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#创建embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.embeddings.openai &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; OpenAIEmbeddings&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;embeddings = OpenAIEmbeddings()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#embedding1 = embeddings.embed_query(sentence1)#对string类型构建embedding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#创建vectorstore，需要先安装chromadb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.vectorstores &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Chroma&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;persist_directory = &lt;span class=&#34;string&#34;&gt;&amp;#x27;db&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;vectorstore = Chroma.from_documents(documents, embedding=embeddings,persist_directory=persist_directory)&lt;span class=&#34;comment&#34;&gt;#若直接从string列表中读取，用from_texts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#vectorstore.persist()#保存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#vectorstore = Chroma(persist_directory=persist_directory, embedding_function=embeddings)#读入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#docs = vectordb.similarity_search(question_str,k=3)#相似性搜索&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#docs.max_marginal_relevance_search(question_str,k=2, fetch_k=3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若要从 &lt;code&gt;query&lt;/code&gt;  中搜索相似数据，可采用以下方式&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.llms &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; OpenAI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.retrievers.self_query.base &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; SelfQueryRetriever&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chains.query_constructor.base &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; AttributeInfo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;metadata_field_info = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    AttributeInfo(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        name=&lt;span class=&#34;string&#34;&gt;&amp;quot;source&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        description=&lt;span class=&#34;string&#34;&gt;&amp;quot;The lecture the chunk is from, should be one of `docs/cs229_lectures/MachineLearning-Lecture01.pdf`, `docs/cs229_lectures/MachineLearning-Lecture02.pdf`, or `docs/cs229_lectures/MachineLearning-Lecture03.pdf`&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;string&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    AttributeInfo(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        name=&lt;span class=&#34;string&#34;&gt;&amp;quot;page&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        description=&lt;span class=&#34;string&#34;&gt;&amp;quot;The page from the lecture&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;integer&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;document_content_description = &lt;span class=&#34;string&#34;&gt;&amp;quot;Lecture notes&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm = OpenAI(temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retriever = SelfQueryRetriever.from_llm(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    llm,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    vectordb,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    document_content_description,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    metadata_field_info,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    verbose=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;question = &lt;span class=&#34;string&#34;&gt;&amp;quot;what did they say about regression in the third lecture?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;docs = retriever.get_relevant_documents(question)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当文本过长时，可以使用 &lt;code&gt;ContextualCompressionRetriever&lt;/code&gt;  模块来压缩，使用方法如下:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.retrievers &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ContextualCompressionRetriever&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.retrievers.document_compressors &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; LLMChainExtractor&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;pretty_print_docs&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;docs&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;f&amp;quot;\n&lt;span class=&#34;subst&#34;&gt;&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;-&amp;#x27;&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;&amp;#125;&lt;/span&gt;\n&amp;quot;&lt;/span&gt;.join([&lt;span class=&#34;string&#34;&gt;f&amp;quot;Document &lt;span class=&#34;subst&#34;&gt;&amp;#123;i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;&lt;/span&gt;:\n\n&amp;quot;&lt;/span&gt; + d.page_content &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i, d &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(docs)]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Wrap our vectorstore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm = OpenAI(temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;compressor = LLMChainExtractor.from_llm(llm)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;compression_retriever = ContextualCompressionRetriever(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    base_compressor=compressor,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    base_retriever=vectordb.as_retriever()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;question = &lt;span class=&#34;string&#34;&gt;&amp;quot;what did they say about matlab?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;compressed_docs = compression_retriever.get_relevant_documents(question)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pretty_print_docs(compressed_docs)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;调用llm模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#调用llm模型&#34;&gt;#&lt;/a&gt; 调用 LLM 模型&lt;/h3&gt;
&lt;p&gt;简单调用方式:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chat_models &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ChatOpenAI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm = ChatOpenAI(model_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;gpt-3.5-turbo&amp;quot;&lt;/span&gt;, temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm.predict(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello world!&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;设置提示词模板&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.prompts &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; PromptTemplate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.output_parsers &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; StructuredOutputParser, ResponseSchema&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#定义提取信息的格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response_schemas = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ResponseSchema(name=&lt;span class=&#34;string&#34;&gt;&amp;quot;时间&amp;quot;&lt;/span&gt;, description=&lt;span class=&#34;string&#34;&gt;&amp;quot;事件的时间&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ResponseSchema(name=&lt;span class=&#34;string&#34;&gt;&amp;quot;主体&amp;quot;&lt;/span&gt;, description=&lt;span class=&#34;string&#34;&gt;&amp;quot;执行事件的人&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 初始化解析器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;output_parser = StructuredOutputParser.from_response_schemas(response_schemas)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;format_instructions = output_parser.get_format_instructions()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#定义描述词模板&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;template = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;你是一个数据分析师,你的任务是从用户输入的一段事件中,根据以下要求提取和输出信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#123;format_instructions&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;% USER INPUT:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#123;user_input&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;YOUR RESPONSE:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#将模板嵌入提示词&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;prompt = PromptTemplate(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input_variables=[&lt;span class=&#34;string&#34;&gt;&amp;quot;user_input&amp;quot;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    partial_variables=&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;format_instructions&amp;quot;&lt;/span&gt;: format_instructions&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    template=template&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;promptValue = prompt.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(user_input=&lt;span class=&#34;string&#34;&gt;&amp;quot;2023年9月1日,小明去上学了&amp;quot;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#返回string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm_output = llm(promptValue)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用解析器进行解析生成的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;output_parser.parse(llm_output)&lt;span class=&#34;comment&#34;&gt;#返回dic&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;此外还可以创建 &lt;code&gt;chain&lt;/code&gt;  来回答，最常用的 chain 为 &lt;code&gt;RetrievalQA&lt;/code&gt;  和 &lt;code&gt;ConversationalRetrievalChain&lt;/code&gt; , 示例如下:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RetrievalQA&lt;/code&gt;  示例&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.prompts &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; PromptTemplate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;template = &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;Use the following pieces of context to answer the question at the end. If you don&amp;#x27;t know the answer, just say that you don&amp;#x27;t know, don&amp;#x27;t try to make up an answer. Use three sentences maximum. Keep the answer as concise as possible. Always say &amp;quot;thanks for asking!&amp;quot; at the end of the answer. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#123;context&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Question: &amp;#123;question&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Helpful Answer:&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;QA_CHAIN_PROMPT = PromptTemplate(input_variables=[&lt;span class=&#34;string&#34;&gt;&amp;quot;context&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;question&amp;quot;&lt;/span&gt;],template=template)&lt;span class=&#34;comment&#34;&gt;##使用RetrievalQA必须要有&amp;quot;context&amp;quot;变量,表示向量库搜索的文本,后续不用在input_data指定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Run chain&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chains &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; RetrievalQA&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;question = &lt;span class=&#34;string&#34;&gt;&amp;quot;Is probability a class topic?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qa_chain = RetrievalQA.from_chain_type(llm,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                       retriever=vectordb.as_retriever(),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                       return_source_documents=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                       chain_type_kwargs=&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;prompt&amp;quot;&lt;/span&gt;: QA_CHAIN_PROMPT&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = qa_chain(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;question&amp;quot;&lt;/span&gt;: question,&lt;span class=&#34;string&#34;&gt;&amp;quot;context&amp;quot;&lt;/span&gt;:context&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result[&lt;span class=&#34;string&#34;&gt;&amp;quot;result&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ConversationalRetrievalChain&lt;/code&gt;  示例&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.memory &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ConversationBufferMemory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;memory = ConversationBufferMemory(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memory_key=&lt;span class=&#34;string&#34;&gt;&amp;quot;chat_history&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    return_messages=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chains &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ConversationalRetrievalChain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;retriever=vectordb.as_retriever()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;qa = ConversationalRetrievalChain.from_llm(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    llm,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    retriever=retriever,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    memory=memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;question = &lt;span class=&#34;string&#34;&gt;&amp;quot;Is probability a class topic?&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result = qa(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;question&amp;quot;&lt;/span&gt;: question&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;result[&lt;span class=&#34;string&#34;&gt;&amp;#x27;answer&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;openai 更新了 GPT 相关 api, 可以以 json 格式输出回答 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9wbGF0Zm9ybS5vcGVuYWkuY29tL2RvY3MvZ3VpZGVzL2dwdC9jaGF0LWNvbXBsZXRpb25zLWFwaQ==&#34;&gt;https://platform.openai.com/docs/guides/gpt/chat-completions-api&lt;/span&gt;), 目前 Langchain 已添加了相关函数调用，具体示例可参考:&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9weXRob24ubGFuZ2NoYWluLmNvbS9kb2NzL21vZHVsZXMvY2hhaW5zL2FkZGl0aW9uYWwvb3BlbmFpX2Z1bmN0aW9uc19yZXRyaWV2YWxfcWE=&#34;&gt;https://python.langchain.com/docs/modules/chains/additional/openai_functions_retrieval_qa&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;langchain衍生库使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#langchain衍生库使用&#34;&gt;#&lt;/a&gt; Langchain 衍生库使用&lt;/h2&gt;
&lt;h3 id=&#34;llama_index使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#llama_index使用&#34;&gt;#&lt;/a&gt; llama_index 使用&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2plcnJ5amxpdS9sbGFtYV9pbmRleA==&#34;&gt;llama_index&lt;/span&gt; 是一个基于 Langchain 的库，专门用于连接本地数据与 LLM 模型。更新较快，此处以 0.0.65 版为例&lt;br&gt;
需要导入以下模块&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; llama_index &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; SimpleDirectoryReader,GPTListIndex,GPTSimpleVectorIndex,LLMPredictor,PromptHelper,ServiceContext&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; OpenAI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chat_models &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ChatOpenAI&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create_index&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  docs = SimpleDirectoryReader(path).load_data() &lt;span class=&#34;comment&#34;&gt;#load data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vectorIndex = GPTSimpleVectorIndex.from_documents(documents=docs) &lt;span class=&#34;comment&#34;&gt;#create vector index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vectorIndex.save_to_disk(&lt;span class=&#34;string&#34;&gt;&amp;#x27;vectorIndex.json&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; vectorIndex&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上函数加载指定路径中的文档 (txt,doc 等)，并经过 embedding 将文档表示为向量，存入 json 文件中。&lt;strong&gt;GPTSimpleVectorIndex&lt;/strong&gt; 默认使用 &amp;quot;text-davinci-003&amp;quot;, 也可以自行定义 &amp;quot;service_context&amp;quot; 参数，定义方式如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;Getservice_con&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  llm_predictor = LLMPredictor(llm=OpenAI(temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, model_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;text-davinci-003&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;#llm_predictor=LLMPredictor(llm=ChatOpenAI(model_name=&amp;quot;gpt-3.5-turbo&amp;quot;,temperature=0))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# define prompt helper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# set maximum input size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  max_input_size = &lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# set number of output tokens&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  num_output = &lt;span class=&#34;number&#34;&gt;128&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;# set maximum chunk overlap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  max_chunk_overlap = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  prompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;#service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor) &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; service_context    &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;service_context 可作为参数输入 &lt;code&gt;GPTSimpleVectorIndex&lt;/code&gt; ，即 &lt;code&gt;GPTSimpleVectorIndex.from_documents(documents=docs,service_context=service_context)&lt;/code&gt; 。此外 &lt;code&gt;prompt_helper&lt;/code&gt;  中的各项参数可以直接输入 &lt;code&gt;service_context&lt;/code&gt; ，例如 &lt;code&gt; service_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, chunk_size_limit=1024)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;调用 LLM 模型接口时，从保存的 json 文件中搜索与描述词相近的向量，作为上下文与描述词同时输入 LLM 模型接口&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;answerMe&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;vectorIndex,service_context&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  vIndex = GPTSimpleVectorIndex.load_from_disk(vectorIndex)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input_data = &lt;span class=&#34;built_in&#34;&gt;input&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;Please ask: &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    response = vIndex.query(input_data,response_mode=&lt;span class=&#34;string&#34;&gt;&amp;quot;compact&amp;quot;&lt;/span&gt;,service_context=ser)&lt;span class=&#34;comment&#34;&gt;#service_context定义调用的LLM接口参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(response)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;kor库使用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#kor库使用&#34;&gt;#&lt;/a&gt; Kor 库使用&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9leXVydHNldi5naXRodWIuaW8va29yL3R1dG9yaWFsLmh0bWw=&#34;&gt;Kor 库&lt;/span&gt; 主要用于从文本中提取结构化数据，使用时一般需要导入以下库并定义 LLM 模型&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; kor.extraction &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; create_extraction_chain&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; kor.nodes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; Object, Text,Selection,Option&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; langchain.chat_models &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; ChatOpenAI&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;llm = ChatOpenAI(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    model_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;gpt-3.5-turbo&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    temperature=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    max_tokens=&lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    frequency_penalty=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    presence_penalty=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    top_p=&lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Text&lt;/code&gt; , &lt;code&gt;Selection&lt;/code&gt; , &lt;code&gt;Option&lt;/code&gt;  为 &lt;code&gt;Object&lt;/code&gt;  的三种常用属性。Text 简单模式示例如下：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;schema = Object(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;person&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    description=&lt;span class=&#34;string&#34;&gt;&amp;quot;Personal information&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    examples=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (&lt;span class=&#34;string&#34;&gt;&amp;quot;Alice and Bob are friends&amp;quot;&lt;/span&gt;, [&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Alice&amp;quot;&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;&amp;#125;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    attributes=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Text(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            description=&lt;span class=&#34;string&#34;&gt;&amp;quot;The first name of a person.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    many=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，&lt;strong&gt; &lt;code&gt;id&lt;/code&gt;  只能用英文表示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建链并设置新的问题&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chain = create_extraction_chain(llm, schema)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;response=chain.predict_and_parse(text=(&lt;span class=&#34;string&#34;&gt;&amp;quot;My name is Bobby. My brother&amp;#x27;s name Joe.&amp;quot;&lt;/span&gt;))[&lt;span class=&#34;string&#34;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出为 &lt;code&gt;&amp;#123;&#39;person&#39;: [&amp;#123;&#39;first_name&#39;: &#39;Bobby&#39;&amp;#125;, &amp;#123;&#39;first_name&#39;: &#39;Joe&#39;&amp;#125;]&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;print(chain.prompt.format_prompt(text=&amp;quot;[user input]&amp;quot;).to_string())&lt;/code&gt;  可获取输入大语言模型的描述词&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Your goal &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; to extract structured information &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; the use&lt;span class=&#34;string&#34;&gt;r&amp;#x27;s input that matches the form described below. When extracting information please make sure it matches the type information exactly. Do not add any attributes that do not appear in the schema shown below.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`TypeScript&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;person: Array&amp;lt;&amp;#123; // Personal information&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; first_name: string // The first name of a person.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Please output the extracted information in CSV format in Excel dialect. Please use a | as the delimiter. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Do NOT add any clarifying information. Output MUST follow the schema above. Do NOT add any additional columns that do not appear in the schema.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Input: Alice and Bob are friends&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Output: first_name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Alice&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Bob&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Input: [user input]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Output:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当 schema 中有多个 attributes 时，&lt;strong&gt;example 中要包括所有 attributes 中的参数&lt;/strong&gt;，以 Selection 类型为例&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sel = Selection(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;name_type&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    description=&lt;span class=&#34;string&#34;&gt;&amp;quot;Whether the sentence show the name is of a boy or girl&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    options=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Option(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;boy&amp;quot;&lt;/span&gt;, description=&lt;span class=&#34;string&#34;&gt;&amp;quot;boy&amp;#x27;s name&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Option(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;girl&amp;quot;&lt;/span&gt;, description=&lt;span class=&#34;string&#34;&gt;&amp;quot;girl&amp;#x27;s name&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Option(&lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;, description=&lt;span class=&#34;string&#34;&gt;&amp;quot;not sure&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    many=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当结构写为以下形式&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;schema = Object(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;person&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    description=&lt;span class=&#34;string&#34;&gt;&amp;quot;Personal information&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    attributes=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Text(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;built_in&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            description=&lt;span class=&#34;string&#34;&gt;&amp;quot;The first name of a person.&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ),sel&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    examples=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        (&lt;span class=&#34;string&#34;&gt;&amp;quot;Alice and Bob are friends&amp;quot;&lt;/span&gt;, [&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Alice&amp;quot;&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;name_type&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&amp;#125;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    many=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入大模型的描述词为:&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Your goal &lt;span class=&#34;keyword&#34;&gt;is&lt;/span&gt; to extract structured information &lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; the use&lt;span class=&#34;string&#34;&gt;r&amp;#x27;s input that matches the form described below. When extracting information please make sure it matches the type information exactly. Do not add any attributes that do not appear in the schema shown below.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`TypeScript&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;person: Array&amp;lt;&amp;#123; // Personal information&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; first_name: string // The first name of a person.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; name_type: &amp;quot;boy&amp;quot; | &amp;quot;girl&amp;quot; | &amp;quot;none&amp;quot; // Whether the sentence show the name is of a boy or girl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Please output the extracted information in CSV format in Excel dialect. Please use a | as the delimiter. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt; Do NOT add any clarifying information. Output MUST follow the schema above. Do NOT add any additional columns that do not appear in the schema.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Input: Alice and Bob are friends&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Output: first_name|name_type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Alice|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Bob|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;|none&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Input: [user input]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;Output:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当 &lt;code&gt;schema&lt;/code&gt;  中 &lt;code&gt;examples&lt;/code&gt;  的每条属性分批书写，例如以下写法&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;examples=[&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;string&#34;&gt;&amp;quot;Alice and Bob are friends&amp;quot;&lt;/span&gt;, [&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Alice&amp;quot;&lt;/span&gt;&amp;#125;, &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;&amp;#125;]),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    (&lt;span class=&#34;string&#34;&gt;&amp;quot;Alice and Bob are friends&amp;quot;&lt;/span&gt;, [&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;name_type&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&amp;#125;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;则输入大模型的描述词中，示例写为:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
Input: Alice and Bob are friends
Output: first_name|name_type
Alice|
Bob|

Input: Alice and Bob are friends
Output: first_name|name_type
|none
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不正确&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/05/25/XiaozhengChat/</guid>
            <title>基于GPT与本地知识库的数字人聊天应用</title>
            <link>http://yjfyqfzs.github.io/2023/05/25/XiaozhengChat/</link>
            <pubDate>Thu, 25 May 2023 15:10:51 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;90a48df8e490762febf036ae63cb4601e3933bf026b7ec40a44d271c470428c5&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/03/04/UeMayaControlRig/</guid>
            <title>Python实现Unreal和Maya传输Metahuman面部控制器数据</title>
            <link>http://yjfyqfzs.github.io/2023/03/04/UeMayaControlRig/</link>
            <pubDate>Sat, 04 Mar 2023 08:30:41 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;Metahuman 的面部控制器可以直接在 Unreal Sequence 中调节，使开发者更直观地修改动画。但目前只支持将 Maya 中的控制器 FBX 导入 Ue，Ue 修改后的控制器动画不能直接导出。&lt;br&gt;
此时使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmwwdjAuY29tL3Bvc3RzLzFiMjM4YjgzLmh0bWw=&#34;&gt;智伤帝的博客&lt;/span&gt;中的方法，实现 ue 控制器关键帧导出 json 文件和 Maya 导入控制器关键帧 json 数据。另外 Maya 导出控制器 FBX 时烘培了所有帧，在 Ue 里不方便二次修改，因此用 Python 实现 Maya 控制器关键帧数据导出 json 和 Ue 导入 json 数据。&lt;br&gt;
&lt;strong&gt;重要 tip：&lt;/strong&gt; ChatGPT 有利于辅助 Maya python 代码编写和纠错，但不能用于写 Ue python 代码，ChatGPT 会编造并不存在的函数。&lt;/p&gt;
&lt;h2 id=&#34;前期准备&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前期准备&#34;&gt;#&lt;/a&gt; 前期准备&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Maya 创建集 (Set)&lt;/strong&gt;&lt;br&gt;
 框选所有面部控制器（不选外面的大框），点击 &lt;code&gt;Create-Set-Quick select set&lt;/code&gt;  创建集。后续如果要删除集中的物体，可以使用以下命令删除&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; maya.cmds &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; cmds&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set_name = &lt;span class=&#34;string&#34;&gt;&amp;quot;mySet&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;component_list = [&lt;span class=&#34;string&#34;&gt;&amp;quot;pCube1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;pSphere1&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;pCylinder1&amp;quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmds.sets(component_list, remove=set_name)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果控制器的 TranslateX 属性不可调，需要将其锁定（选中控制器按 &lt;code&gt;Ctrl+a&lt;/code&gt; ，点击 Translate 里的 x 属性右键 &lt;code&gt;lock attribute&lt;/code&gt; ），否则 Ue 读取 Maya 导出的 json 数据时可能出错&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ue Python 脚本使用&lt;/strong&gt;&lt;br&gt;
首先需要在 &lt;code&gt;Settings-Plugins&lt;/code&gt;  开启图中所示插件&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/03/04/UeMayaControlRig/img1.png&#34; width=&#34;400&#34;&gt; &lt;/div&gt;
&lt;p&gt;打开 &lt;code&gt;Windows-Developer Tools-Output Log&lt;/code&gt;  可以看到运行日志，python 代码可以在 python 模式下单步运行，也可以在 cmd 模式下以 &lt;code&gt;py &amp;quot;./MyScript.py&amp;quot;&lt;/code&gt;  的形式运行&lt;/p&gt;
&lt;h2 id=&#34;具体代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#具体代码&#34;&gt;#&lt;/a&gt; 具体代码&lt;/h2&gt;
&lt;h3 id=&#34;maya导出关键帧json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#maya导出关键帧json&#34;&gt;#&lt;/a&gt; Maya 导出关键帧 json&lt;/h3&gt;
&lt;p&gt;在 Maya 中点击创建的集，选择层级，运行以下代码，需要设置保存文件路径&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; maya.cmds &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; cmds&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attr_x=&lt;span class=&#34;string&#34;&gt;&amp;quot;translateX&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attr_y=&lt;span class=&#34;string&#34;&gt;&amp;quot;translateY&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;file_path = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Your Path&amp;#x27;&lt;/span&gt;  &lt;span class=&#34;comment&#34;&gt;# 保存文件的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#获取选中物体关键帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;GetSelKey&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;selobj&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    obj_x=selobj[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]+&lt;span class=&#34;string&#34;&gt;&amp;quot;.ty&amp;quot;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;#selobj[0]为控制器名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(obj_x)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    all_keys = &lt;span class=&#34;built_in&#34;&gt;sorted&lt;/span&gt;(cmds.keyframe(obj_x, q=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; all_keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_controller_values&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;ctrl_name, result_dict&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    获取控制器的值，并将结果存储在字典中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    :param ctrl_name: 控制器名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    :param result_dict: 结果字典，用于存储控制器值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    selobj=cmds.ls(ctrl_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    all_keys=GetSelKey(selobj)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    single_list_x=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    single_list_y=[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(all_keys)):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cmds.currentTime(all_keys[i])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#只有x和y两种情况,判断x属性是否被锁定(注意不要用判断属性是否存在,恒为true)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        attrx_lock=cmds.getAttr(ctrl_name  + &lt;span class=&#34;string&#34;&gt;&amp;#x27;.&amp;#x27;&lt;/span&gt; + attr_x, lock=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;#attrx_exist=cmds.objExists(ctrl_name + &amp;quot;.&amp;quot; + attr_x)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; attrx_lock:  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            single_list_y.append(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;frame&amp;quot;&lt;/span&gt;: all_keys[i], &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: cmds.getAttr(ctrl_name + &lt;span class=&#34;string&#34;&gt;&amp;quot;.translateY&amp;quot;&lt;/span&gt;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result_dict[ctrl_name] = single_list_y  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;span class=&#34;comment&#34;&gt;#如果存在tx属性,x和y需要分别存储,名字也不一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            x_name=ctrl_name+&lt;span class=&#34;string&#34;&gt;&amp;quot;.X&amp;quot;&lt;/span&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            single_list_x.append(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;frame&amp;quot;&lt;/span&gt;: all_keys[i], &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: cmds.getAttr(ctrl_name + &lt;span class=&#34;string&#34;&gt;&amp;quot;.translateX&amp;quot;&lt;/span&gt;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result_dict[x_name] = single_list_x&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            y_name=ctrl_name+&lt;span class=&#34;string&#34;&gt;&amp;quot;.Y&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            single_list_y.append(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;frame&amp;quot;&lt;/span&gt;: all_keys[i], &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: cmds.getAttr(ctrl_name + &lt;span class=&#34;string&#34;&gt;&amp;quot;.translateY&amp;quot;&lt;/span&gt;)&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            result_dict[y_name] = single_list_y  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save_controller_values&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;ctrl_name_list, file_path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    保存控制器的值到 JSON 文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    :param ctrl_name_list: 需要保存的控制器名称列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    :param file_path: 保存文件的路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    result_dict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# =============================================================================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     #尝试使用多线程失败&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     threads = []&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     # 创建线程来获取每个控制器的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     for ctrl_name in ctrl_name_list:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         t = threading.Thread(target=get_controller_values, args=(ctrl_name, result_dict))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         threads.append(t)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         t.start()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     # 等待所有线程完成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#     for t in threads:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#         t.join()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# =============================================================================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ctrl_name &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; ctrl_name_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        get_controller_values(ctrl_name, result_dict)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 保存结果到 JSON 文件中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(file_path, &lt;span class=&#34;string&#34;&gt;&amp;#x27;w&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        json.dump(result_dict, f,indent=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctrl_name_sel= cmds.ls(selection=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)  &lt;span class=&#34;comment&#34;&gt;# 获取所选的控制器名称列表,名字与名字_shape&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c_len=&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(ctrl_name_sel)    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ctrl_name_list=ctrl_name_sel[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:c_len:&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;#间隔取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;save_controller_values(ctrl_name_list, file_path)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;ue导入关键帧json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ue导入关键帧json&#34;&gt;#&lt;/a&gt; Ue 导入关键帧 json&lt;/h3&gt;
&lt;p&gt;开头需要设置 Sequence 和 json 文件的路径，Sequence 中脸部 skeletal mesh 名称&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; unreal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; collections &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; defaultdict&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; re&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DIR = os.path.dirname(os.path.abspath(__file__))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;my_seq_path=&lt;span class=&#34;string&#34;&gt;&amp;#x27;/Game/Seq/ControlRigSeq&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;face_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;json_path=&lt;span class=&#34;string&#34;&gt;&amp;#x27;Maya_control_val.json&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#使用正则表达式,删除字符串末尾的_和数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;remove_suffix&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;s&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; re.sub(&lt;span class=&#34;string&#34;&gt;r&amp;#x27;_[0-9]+$&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;, s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;unreal_progress&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;tasks, label=&lt;span class=&#34;string&#34;&gt;&amp;quot;进度&amp;quot;&lt;/span&gt;, total=&lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    total = total &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; total &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(tasks)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; unreal.ScopedSlowTask(total, label) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; task:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        task.make_dialog(&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i, item &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(tasks):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; task.should_cancel():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            task.enter_progress_frame(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;%s %s/%s&amp;quot;&lt;/span&gt; % (label, i, total))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;yield&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 读取数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(json_path, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; rf:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = json.load(rf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 读取 sequence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sequence = unreal.load_asset(my_seq_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 收集 sequence 里面所有的 binding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binding_dict = defaultdict(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; binding &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; sequence.get_bindings():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    binding_dict[binding.get_name()].append(binding)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 遍历命名为 Face 的 binding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; binding &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; unreal_progress(binding_dict.get(face_name, []), &lt;span class=&#34;string&#34;&gt;&amp;quot;Face&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; track &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; binding.get_tracks():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; section &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; track.get_sections():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; channel &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; unreal_progress(section.get_channels(), &lt;span class=&#34;string&#34;&gt;&amp;quot;获取通道&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;#print(channel.get_name())#str类型&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                ctrl_name=remove_suffix(channel.get_name())&lt;span class=&#34;comment&#34;&gt;#移除channel后面的数字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;#判断是否存在data中是否存在该控制器数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ctrl_name &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; data.keys()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;comment&#34;&gt;#先删除已有的关键帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    key_all=channel.get_keys()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; key_all:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        channel.remove_key(key)&lt;span class=&#34;comment&#34;&gt;#没找到clear_key功能函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    new_key=data[ctrl_name]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; new_value &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; new_key:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        frame_number = unreal.FrameNumber(&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(new_value[&lt;span class=&#34;string&#34;&gt;&amp;#x27;frame&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;#print(frame_number)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        channel.add_key(frame_number,new_value[&lt;span class=&#34;string&#34;&gt;&amp;#x27;value&amp;#x27;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;ue导出关键帧json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ue导出关键帧json&#34;&gt;#&lt;/a&gt; Ue 导出关键帧 json&lt;/h3&gt;
&lt;p&gt;在开头设置需要读取关键帧的 Sequence 路径和脸部 Skeletal mesh 的名称&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; unreal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; collections &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; defaultdict&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;DIR = os.path.dirname(os.path.abspath(__file__))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;my_seq_path=&lt;span class=&#34;string&#34;&gt;&amp;#x27;/Game/Seq/ControlRigSeq&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;face_name=&lt;span class=&#34;string&#34;&gt;&amp;quot;head&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;unreal_progress&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;tasks, label=&lt;span class=&#34;string&#34;&gt;&amp;quot;进度&amp;quot;&lt;/span&gt;, total=&lt;span class=&#34;literal&#34;&gt;None&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    total = total &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; total &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(tasks)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; unreal.ScopedSlowTask(total, label) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; task:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        task.make_dialog(&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i, item &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;enumerate&lt;/span&gt;(tasks):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; task.should_cancel():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            task.enter_progress_frame(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;%s %s/%s&amp;quot;&lt;/span&gt; % (label, i, total))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;yield&lt;/span&gt; item&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 读取 sequence&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sequence = unreal.load_asset(my_seq_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 收集 sequence 里面所有的 binding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;binding_dict = defaultdict(&lt;span class=&#34;built_in&#34;&gt;list&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; binding &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; sequence.get_bindings():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    binding_dict[binding.get_name()].append(binding)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 遍历命名为 Face 的 binding&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; binding &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; unreal_progress(binding_dict.get(face_name, []), &lt;span class=&#34;string&#34;&gt;&amp;quot;导出 Face 数据&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 获取关键帧 channel 数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    keys_dict = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; track &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; binding.get_tracks():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; section &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; track.get_sections():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; channel &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; unreal_progress(section.get_channels(), &lt;span class=&#34;string&#34;&gt;&amp;quot;导出关键帧&amp;quot;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; channel.get_num_keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                keys = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; key &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; channel.get_keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    frame_time = key.get_time()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    frame = frame_time.frame_number.value + frame_time.sub_frame&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    keys.append(&amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;frame&amp;quot;&lt;/span&gt;: frame, &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: key.get_value()&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                keys_dict[channel.get_name()] = keys&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 导出 json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    name = binding.get_parent().get_name()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    export_path = os.path.join(DIR, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;#123;0&amp;#125;.json&amp;quot;&lt;/span&gt;.&lt;span class=&#34;built_in&#34;&gt;format&lt;/span&gt;(name))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(export_path, &lt;span class=&#34;string&#34;&gt;&amp;quot;w&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; wf:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        json.dump(keys_dict, wf, indent=&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;maya导入关键帧json&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#maya导入关键帧json&#34;&gt;#&lt;/a&gt; Maya 导入关键帧 json&lt;/h3&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; json&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#import traceback&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Import third-party modules&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#import pymel.core as pm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#DIR = os.path.dirname(os.path.abspath(__file__))&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;json_path=&lt;span class=&#34;string&#34;&gt;&amp;quot;Mydata.json&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#先选中控制器,清空所有关键帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;key_list= cmds.ls(selection=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmds.cutKey(key_list,s=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 读取数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;open&lt;/span&gt;(json_path, &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; rf:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    data = json.load(rf)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;attr_map = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;quot;location&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;t&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;rotation&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;r&amp;quot;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;quot;Scale&amp;quot;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; undo 支持&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pm.undoInfo(ock=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; channel, frame_list &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; data.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#print(channel)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 解析 channel_name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    if_set=&lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    has_attr = channel.count(&lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; has_attr:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 处理 `CTRL_C_eye_parallelLook_4311` 格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctrl_name = channel.rsplit(&lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        attr = &lt;span class=&#34;string&#34;&gt;&amp;quot;ty&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        parts = &lt;span class=&#34;built_in&#34;&gt;iter&lt;/span&gt;(channel.split(&lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ctrl_name = &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(parts, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        param = &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(parts, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        axis = &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(parts, &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; axis:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 处理 `CTRL_C_teethD.Y_4330` 格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            attr = &lt;span class=&#34;string&#34;&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            axis = param&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            if_set=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;#`CTRL_L_eyeAim.Rotation.Y_4387` 格式都不保存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# =============================================================================&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             # &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 处理 `CTRL_L_eyeAim.Rotation.Y_4387` 格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             attr = attr_map.get(param.lower())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#             if_set=False if param.lower()==&amp;#x27;scale&amp;#x27; else True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# =============================================================================        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; if_set:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            attr += axis.split(&lt;span class=&#34;string&#34;&gt;&amp;quot;_&amp;quot;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].lower()         &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; 解析出控制器属性设置关键帧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; if_set:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        attribute = pm.PyNode(&lt;span class=&#34;string&#34;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;.join([ctrl_name, attr]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; frame_data &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; frame_list:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            frame = frame_data.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;frame&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            value = frame_data.get(&lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            attribute.setKey(t=frame, v=value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pm.undoInfo(cck=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/01/18/ueplug/</guid>
            <title>ue插件</title>
            <link>http://yjfyqfzs.github.io/2023/01/18/ueplug/</link>
            <pubDate>Wed, 18 Jan 2023 10:33:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在项目开发过程中，有时需要为他人的纯蓝图工程提供 C++ 开发的模块，此时通过 UE 的 Plugins 实现。&lt;/p&gt;
&lt;p&gt;新建 UE C&lt;ins&gt; 工程，在 C&lt;/ins&gt; 工程中新建插件，将编译后的插件拷贝至蓝图工程，即可在蓝图工程中使用 C++ 编译的模块。&lt;/p&gt;
&lt;h2 id=&#34;创建蓝图函数库插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建蓝图函数库插件&#34;&gt;#&lt;/a&gt; 创建蓝图函数库插件&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. 新建插件&lt;/strong&gt;&lt;br&gt;
新建 UE C++ 工程，点击 &lt;code&gt;Settings-Plugins-New plugins&lt;/code&gt; ，UE 提供的默认插件如图&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2023/01/18/ueplug/img1.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;其中，Editor Toolbar Button，Editor Standalone Window，Editor Mode 均与 UI 界面有关。Third Party Library 中含第三方库引用示例，Blueprint Library 为蓝图函数库插件。选择 Blueprint Library，新建插件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 插件说明&lt;/strong&gt;&lt;br&gt;
 UE 中的插件由 &lt;code&gt;uplugin&lt;/code&gt;  文件描述，具体如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;FileVersion&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;Version&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//版本号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;VersionName&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//版本名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;FriendlyName&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX&amp;quot;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//插件名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;Description&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//插件描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;Category&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Other&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;CreatedBy&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;,&lt;span class=&#34;comment&#34;&gt;//插件作者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;CreatedByURL&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;DocsURL&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;MarketplaceURL&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;SupportURL&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;CanContainContent&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;IsBetaVersion&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;IsExperimentalVersion&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;Installed&amp;quot;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;string&#34;&gt;&amp;quot;Modules&amp;quot;&lt;/span&gt;: [&lt;span class=&#34;comment&#34;&gt;//插件包含的模块，新创建的插件会默认包含一个同名的模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&amp;quot;Type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Runtime&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&lt;span class=&#34;string&#34;&gt;&amp;quot;LoadingPhase&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;PreLoadingScreen&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;UE 使用模块 (Modules) 来实现多个类功能的集合，插件可以由一个或多个模块组成。模块的编译过程由 &lt;code&gt;.build.cs&lt;/code&gt;  文件设置，模块的一些参数设置如下：&lt;br&gt;
Type 表示模块在什么场景下使用，可选以下参数&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; EHostType&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Runtime,                    &lt;span class=&#34;comment&#34;&gt;//运行时，任何情况下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RuntimeNoCommandlet,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RuntimeAndProgram,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        CookedOnly,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Developer,                  &lt;span class=&#34;comment&#34;&gt;//开发时使用的插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Editor,                     &lt;span class=&#34;comment&#34;&gt;//编辑器类型插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        EditorNoCommandlet,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Program,                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ServerOnly,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ClientOnly,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Max&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;LoadingPhase 为模块加载的阶段，可选以下参数&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;namespace&lt;/span&gt; ELoadingPhase&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;enum&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Type&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PostConfigInit,             &lt;span class=&#34;comment&#34;&gt;//引擎完全加载前，配置文件加载后。适用于较底层的模块。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PreEarlyLoadingScreen,      &lt;span class=&#34;comment&#34;&gt;//在UObject加载前，用于补丁系统&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PreLoadingScreen,           &lt;span class=&#34;comment&#34;&gt;//在引擎模块完全加载和加载页面之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PreDefault,                 &lt;span class=&#34;comment&#34;&gt;//默认模块加载之前阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Default,                    &lt;span class=&#34;comment&#34;&gt;//默认加载阶段，在引擎初始化时，游戏模块加载之后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PostDefault,                &lt;span class=&#34;comment&#34;&gt;//默认加载阶段之后加载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PostEngineInit,             &lt;span class=&#34;comment&#34;&gt;//引擎初始化后&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        None,                       &lt;span class=&#34;comment&#34;&gt;//不自动加载模块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Max&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;3. 函数设置&lt;/strong&gt;&lt;br&gt;
打开 sln 文件，XXX.h 和 XXX.cpp 中声明和定义了模块启动和关闭调用函数，自定义的函数放在 XXXBPLibrary.h 和 XXXBPLibrary.cpp 中&lt;/p&gt;
&lt;p&gt;UE 在标准 C++ 的基础上自定义了一套编译体系，类在定义时需要添加相应的前缀&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;U--UObject派生类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;A--AActor派生类&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;F--FString，FName等大多数类别&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;E--Enums&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;I--抽象接口Interfaces&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;暴露 C++ 类至蓝图可参考此文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vS2lsbGVyQWVyeS9wLzEyMDI2Mzk1Lmh0bWw=&#34;&gt;暴露 C++ 至蓝图接口&lt;/span&gt;&lt;br&gt;
头文件中函数声明为&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//设置为能在蓝图中调用,DisplayName为蓝图中显示框上的文字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;UFUNCTION&lt;/span&gt;(BlueprintCallable, meta = (DisplayName = &lt;span class=&#34;string&#34;&gt;&amp;quot;MyFunc&amp;quot;&lt;/span&gt;, Keywords = &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX&amp;quot;&lt;/span&gt;), Category = &lt;span class=&#34;string&#34;&gt;&amp;quot;MyFuncTesting&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MyFunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; Param)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若作为只能在蓝图中实现的事件，定义为&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;UFUNCTION&lt;/span&gt;(BlueprintImplementableEvent, BlueprintCallable)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MyFunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; Param)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;作为在 C&lt;ins&gt; 中定义的事件，需要声明_implement，C&lt;/ins&gt; 中定义_implement 后缀的函数&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;UFUNCTION&lt;/span&gt;(BlueprintNativeEvent, BlueprintCallable)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MyFunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;virtual&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MyFunction_Implementation&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;cpp 文件中函数定义示例如下&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;type&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;UXXXBPLibrary::MyFunction&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; Param)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;type&#34;&gt;float&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//补充计算过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;创建第三方库引用插件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#创建第三方库引用插件&#34;&gt;#&lt;/a&gt; 创建第三方库引用插件&lt;/h2&gt;
&lt;p&gt;在插件中引用第三方库，主要需要设置静态 / 动态库和头文件。在 UE 中， &lt;code&gt;.lib&lt;/code&gt;  静态库和 &lt;code&gt;include&lt;/code&gt;  中的头文件在 &lt;code&gt;build.cs&lt;/code&gt;  中设置， &lt;code&gt;.dll&lt;/code&gt;  动态库在插件代码中通过函数句柄来设置。具体设置方式如下：&lt;/p&gt;
&lt;p&gt;新建 UE 提供的第三方库引用插件 &lt;code&gt;MyPlug&lt;/code&gt; ，在 &lt;code&gt;.../Source/ThirdParty&lt;/code&gt;  路径下新建文件夹 &lt;code&gt;My3Party&lt;/code&gt; ，将第三方库相关文件夹（ &lt;code&gt;include&lt;/code&gt; ， &lt;code&gt;lib&lt;/code&gt;  等）放在该文件夹中，新建 &lt;code&gt;My3Party.build.cs&lt;/code&gt;  文件，示例如下：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; UnrealBuildTool;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; System.IO;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;My3Party&lt;/span&gt; : ModuleRules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;My3Party&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ReadOnlyTargetRules Target)&lt;/span&gt; : base(Target)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Type = ModuleType.External;&lt;span class=&#34;comment&#34;&gt;//作为外部依赖,不参与编译！！！&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		PublicSystemIncludePaths.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;include&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        string BinaryPath = Path.&lt;span class=&#34;built_in&#34;&gt;GetFullPath&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;../../../Binaries/ThirdParty&amp;quot;&lt;/span&gt;));&lt;span class=&#34;comment&#34;&gt;//..指上一级文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//库文件路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PublicSystemLibraryPaths.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;lib&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//头文件路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PublicIncludePaths.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;include&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//添加静态库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PublicSystemLibraries.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;lib&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX.lib&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		PublicAdditionalLibraries.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(ModuleDirectory, &lt;span class=&#34;string&#34;&gt;&amp;quot;lib&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX.lib&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;//加入动态库&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        PublicDelayLoadDLLs.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;XXX.dll&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        RuntimeDependencies.&lt;span class=&#34;built_in&#34;&gt;Add&lt;/span&gt;(Path.&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(BinaryPath, &lt;span class=&#34;string&#34;&gt;&amp;quot;XXX.dll&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;MyPlug.h&lt;/code&gt;  中设置句柄，注意，有几个 &lt;code&gt;.dll&lt;/code&gt;  文件就设置几个句柄函数。&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;type&#34;&gt;void&lt;/span&gt;* ExampleFunHandle;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;MyPlug.cpp&lt;/code&gt;  中定义 &lt;code&gt;StartupModule&lt;/code&gt;  和 &lt;code&gt;ShutdownModule&lt;/code&gt; ， &lt;code&gt;StartupModule&lt;/code&gt;  中，首先获取该插件的路径：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FString BaseDir = IPluginManager::&lt;span class=&#34;built_in&#34;&gt;Get&lt;/span&gt;().&lt;span class=&#34;built_in&#34;&gt;FindPlugin&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;MyPlug&amp;quot;&lt;/span&gt;)-&amp;gt;&lt;span class=&#34;built_in&#34;&gt;GetBaseDir&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对于每个 &lt;code&gt;.dll&lt;/code&gt;  文件，都有以下语句：&lt;br&gt;
 &lt;code&gt;StartupModule&lt;/code&gt;  函数中：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FString LibraryPath;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; PLATFORM_WINDOWS&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	LibraryPath = FPaths::&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(*BaseDir, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Binaries/ThirdParty/XXX.dll&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; PLATFORM_MAC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    LibraryPath = FPaths::&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(*BaseDir, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Binaries/ThirdParty/XXX.dylib&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;elif&lt;/span&gt; PLATFORM_LINUX&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	LibraryPath = FPaths::&lt;span class=&#34;built_in&#34;&gt;Combine&lt;/span&gt;(*BaseDir, &lt;span class=&#34;built_in&#34;&gt;TEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;Binaries/ThirdParty/XXX.so&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;span class=&#34;keyword&#34;&gt;endif&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;// PLATFORM_WINDOWS&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	ExampleFunHandle = !LibraryPath.&lt;span class=&#34;built_in&#34;&gt;IsEmpty&lt;/span&gt;() ? FPlatformProcess::&lt;span class=&#34;built_in&#34;&gt;GetDllHandle&lt;/span&gt;(*LibraryPath) : &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ExampleFunHandle)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// Call the test function in the third party library that opens a message box&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;//ExampleLibraryFunction();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		FMessageDialog::&lt;span class=&#34;built_in&#34;&gt;Open&lt;/span&gt;(EAppMsgType::Ok, &lt;span class=&#34;built_in&#34;&gt;LOCTEXT&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;ThirdPartyLibraryError&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;XXXX.dll&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ShutdownModule&lt;/code&gt;  函数中：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;FPlatformProcess::&lt;span class=&#34;built_in&#34;&gt;FreeDllHandle&lt;/span&gt;(ExampleFunHandle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ExampleFunHandle = &lt;span class=&#34;literal&#34;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将 &lt;code&gt;.dll&lt;/code&gt;  文件拷贝至 &lt;code&gt;LibraryPath&lt;/code&gt;  对应的路径。在 &lt;code&gt;MyPlug.build.cs&lt;/code&gt;  中添加第三方模块和 &lt;code&gt;Projects&lt;/code&gt; ：&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PublicDependencyModuleNames.&lt;span class=&#34;built_in&#34;&gt;AddRange&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; string[]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;Core&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;My3Party&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;string&#34;&gt;&amp;quot;Projects&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;comment&#34;&gt;// ... add other public dependencies that you statically link with here ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;编译运行，即可使用第三方模块。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2023/01/05/GithubHexo/</guid>
            <title>Hexo+Github博客搭建</title>
            <link>http://yjfyqfzs.github.io/2023/01/05/GithubHexo/</link>
            <pubDate>Thu, 05 Jan 2023 11:03:28 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;配置 Github&lt;/strong&gt;&lt;br&gt;
 注册 Github 账号，新建 New repository，命名为 &lt;code&gt;http://用户名.github.io&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装 Git，运行 Git Bash，设置用户名和邮箱&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.name &lt;span class=&#34;string&#34;&gt;&amp;quot;你的GitHub用户名&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --global user.email &lt;span class=&#34;string&#34;&gt;&amp;quot;你的GitHub注册邮箱&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;生成 ssh 密钥文件&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;你的GitHub注册邮箱&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 &lt;code&gt;C:/用户/你的用户名/.ssh&lt;/code&gt;  中会生成两个文件 &lt;code&gt;id_rsa&lt;/code&gt;  和 &lt;code&gt;id_rsa.pub&lt;/code&gt; ，用记事本打开 &lt;code&gt;id_rsa.pub&lt;/code&gt; ，将内容复制到 Github 新建的 SSH key。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hexo 配置&lt;/strong&gt;&lt;br&gt;
安装 Node.js，随后在 cmd 中运行 &lt;code&gt;npm install -g hexo-cli&lt;/code&gt; ，即可安装 Hexo。&lt;/p&gt;
&lt;p&gt;在 Git bash 中运行 &lt;code&gt;hexo init MyHexo&lt;/code&gt;  初始化博客。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;MyHexo&lt;/code&gt;  文件夹运行以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight c++&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;标题&amp;quot;&lt;/span&gt;&lt;span class=&#34;comment&#34;&gt;//新建文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g &lt;span class=&#34;comment&#34;&gt;//生成网页&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s&lt;span class=&#34;comment&#34;&gt;//启动服务预览，在本地浏览器输入localhost:4000预览&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL3RoZW1lcy9pbmRleC5odG1s&#34;&gt;hexo 模板&lt;/span&gt;中可以挑选主题模板，按说明配置&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm list --depth 0&lt;/code&gt;  可查看已经安装的包&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;部署到 Github&lt;/strong&gt;&lt;br&gt;
 安装插件 &lt;code&gt;npm install hexo-deployer-git --save &lt;/code&gt; &lt;br&gt;
修改 &lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repo: git@github.com:XXX/XXX.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Git Bash 运行以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g	&lt;span class=&#34;comment&#34;&gt;# 生成静态文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d	&lt;span class=&#34;comment&#34;&gt;# 部署代码到GitHub上，之后会跳出github授权的框&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;解决本地预览图片不显示问题&lt;/strong&gt;&lt;br&gt;
打开 &lt;code&gt;MyHexo&lt;/code&gt;  文件夹的 &lt;code&gt;_config.yml&lt;/code&gt;  文件，将 &lt;code&gt;post_asset_folder&lt;/code&gt;  的值修改为 &lt;code&gt;true&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在 Git bash 中运行 &lt;code&gt;npm install hexo-asset-image --save&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时新建文章后， &lt;code&gt;source/_posts/&lt;/code&gt;  中会生成与 md 文件同名的文件夹，将图片放在该文件夹即可&lt;/p&gt;
&lt;p&gt;如果仍然不显示图片，根据错误提示修改 &lt;code&gt;/node_modules/hexo-asset-image&lt;/code&gt;  里的 &lt;code&gt;index.js&lt;/code&gt;  文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;给文章添加密码&lt;/strong&gt;&lt;br&gt;
安装插件 &lt;code&gt;npm install --save hexo-blog-encrypt&lt;/code&gt; &lt;br&gt;
 添加密码时在文章信息头部添加 &lt;code&gt;password&lt;/code&gt;  即可&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;---&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;title: Hello&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;date: 2023-01-10 10:43:03&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;password: XXX&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tags: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2022/12/15/MayaApi/</guid>
            <title>Maya Api笔记</title>
            <link>http://yjfyqfzs.github.io/2022/12/15/MayaApi/</link>
            <pubDate>Thu, 15 Dec 2022 11:00:14 +0800</pubDate>
            <description><![CDATA[ &lt;div class=&#34;hbe hbe-container&#34; id=&#34;hexo-blog-encrypt&#34; data-wpm=&#34;Oh, this is an invalid password. Check and try again, please.&#34; data-whm=&#34;OOPS, these decrypted content may changed, but you can still have a look.&#34;&gt;
  &lt;script id=&#34;hbeData&#34; type=&#34;hbeData&#34; data-hmacdigest=&#34;f1378580f4f4c2cd210f840747995cab969ab8742bc61feecf6426cc791635cb&#34;&gt;&lt;/script&gt;
  &lt;div class=&#34;hbe hbe-content&#34;&gt;
    &lt;div class=&#34;hbe hbe-input hbe-input-default&#34;&gt;
      &lt;input class=&#34;hbe hbe-input-field hbe-input-field-default&#34; type=&#34;password&#34; id=&#34;hbePass&#34;&gt;
      &lt;label class=&#34;hbe hbe-input-label hbe-input-label-default&#34; for=&#34;hbePass&#34;&gt;
        &lt;span class=&#34;hbe hbe-input-label-content hbe-input-label-content-default&#34;&gt;Hey, password is required here.&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;script data-pjax src=&#34;/lib/hbe.js&#34;&gt;&lt;/script&gt;&lt;link href=&#34;/css/hbe.style.css&#34; rel=&#34;stylesheet&#34; type=&#34;text/css&#34;&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/</guid>
            <title>Ue蓝图修改Sequence</title>
            <link>http://yjfyqfzs.github.io/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/</link>
            <pubDate>Fri, 09 Dec 2022 16:52:54 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;在实际应用中有时需要批量修改 UE Sequence 关键帧的参数，该操作直接作用于 Content 中的 sequence 资源，不能作为仅在关卡播放时运行的事件。UE 提供了 Editor Utility Blueprint 来实现只需要在编辑器中运行的事件，具体使用步骤如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 开启相关插件&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img1.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;2. 新建 Editor Utility Blueprint&lt;/strong&gt;&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img2.png&#34; width=&#34;400&#34;&gt; &lt;/div&gt;
&lt;p&gt;选择 Asset Action Utility&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img3.png&#34; width=&#34;400&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;3. 添加事件&lt;/strong&gt;&lt;br&gt;
打开新建的 Editor Utility Blueprint，新建随机事件，需要勾选 Call in Editor 才能在编辑器中被调用。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img4.png&#34; width=&#34;800&#34;&gt; &lt;/div&gt;
&lt;p&gt;Sequence 中的关键帧数值读取层级：&lt;strong&gt;Binding-&amp;gt;Track-&amp;gt;Section-&amp;gt;Channel-&amp;gt;Key-&amp;gt;Value&lt;/strong&gt;&lt;br&gt;
 其中，Binding 表示 Sequence 中对象绑定 ID 的结构体，每个对象的 ID 唯一；Track 为绑定对象的轨道（如 Animation，Transform 等，用 Get Display name 可获取具体名称）；Section 表示轨道中的片段；Channel 为各参数通道，如 Location,Rotation 等。下图事件为将 Sequence 中所有 Transform 轨道的关键帧位置 X 加 10。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img5.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;4. 运行事件&lt;/strong&gt;&lt;br&gt;
选中资源管理器中需要修改的 Sequence，右键如下图运行相应事件即可。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/09/Ue%E8%93%9D%E5%9B%BE%E4%BF%AE%E6%94%B9Sequence/img6.png&#34;&gt; &lt;/div&gt;
&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLnVucmVhbGVuZ2luZS5jb20vNC4yNy9lbi1VUy9Qcm9kdWN0aW9uUGlwZWxpbmVzL1NjcmlwdGluZ0FuZEF1dG9tYXRpb24vQmx1ZXByaW50cy9TY3JpcHRlZEFjdGlvbnMv&#34;&gt; Editor Utility Blueprint UE 官方教程&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibHVlcHJpbnR1ZS5jb20vdHlwZS9ibHVlcHJpbnQv&#34;&gt; UE 蓝图查询网站&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NDcwNTI1L2FydGljbGUvZGV0YWlscy8xMDU5Njc2MjE=&#34;&gt; UE C++ 获取 Sequence 对象&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xNTc4OTI2MDU=&#34;&gt; UE LevelSequence 源码解析&lt;/span&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://yjfyqfzs.github.io/2022/12/02/DNAimg/</guid>
            <title>MetahumanDNA校准库</title>
            <link>http://yjfyqfzs.github.io/2022/12/02/DNAimg/</link>
            <pubDate>Fri, 02 Dec 2022 10:43:03 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;dna文件描述&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dna文件描述&#34;&gt;#&lt;/a&gt; DNA 文件描述&lt;/h2&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img1.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图1&lt;/center&gt;
&lt;p&gt;具体描述可参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jZG4yLnVucmVhbGVuZ2luZS5jb20vcmlnLWxvZ2ljLXdoaXRlcGFwZXItdjItemhjbi01ODYwZDgwZjgzNTcucGRm&#34;&gt; RigLogic 白皮书&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;metahuman 面部驱动逻辑：&lt;/strong&gt; 控制器 GUI 数值 -&amp;gt;RigLogic（存储在 DNA 文件中）-&amp;gt; 关节等数据&lt;br&gt;
 Maya 中，采用以下方式查看 DNA 文件路径:&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img2.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图2&lt;/center&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img3.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图3&lt;/center&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img4.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图4&lt;/center&gt;
&lt;p&gt;Unreal 中，DNAAsset 参数在 Skeletal Mesh 中查找&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img5.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图5&lt;/center&gt;
&lt;p&gt;Epic Games 官方提供的 python 示例在 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\examples&lt;/code&gt;  中，全部 api 可在 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\dnacalib\DNACalib\include&lt;/code&gt;  的 &lt;code&gt;C++&lt;/code&gt;  头文件中查找，python api 名称与 &lt;code&gt;C++&lt;/code&gt;  api 名称相同。&lt;/p&gt;
&lt;h2 id=&#34;dnaviewer&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dnaviewer&#34;&gt;#&lt;/a&gt; DNAViewer&lt;/h2&gt;
&lt;p&gt;DNAViewer 模块用于在 Maya 中从 DNA 文件创建几何体与绑定，只适用于 python3.7，因此只能在 Maya2022 或更高版本中使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在 Maya 中获取 DNA 文件数据并显示&lt;/strong&gt;&lt;br&gt;
在 Maya Script editor 里运行 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\examples\dna_viewer_run_in_maya.py&lt;/code&gt; （其中，ROOT_DIR 要修改为绝对路径），显示图 6 所示界面：&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img6.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图6&lt;/center&gt;
&lt;p&gt;图 6 中，Path 选择 DNA 路径，点击 Load DNA，Meshes 中会出现相应组件，选择 Build options 中的选项，点击 Process，即可将关节等数据导入 Maya 场景。若要导入控制器驱动逻辑 (rig logic)，还需设置 gui path 等，相关文件在 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\data\&lt;/code&gt;  中，如图 7 所示，其中，gui.ma 和 analog_gui.ma 中为控制器的 UI 界面。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img7.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图7&lt;/center&gt;
&lt;p&gt;&lt;strong&gt;将 Maya 场景中的数据保存至 DNA 文件中&lt;/strong&gt;&lt;br&gt;
修改了有 DNA 文件的 Maya 场景后，将原始 DNA 文件放置路径 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\data\&lt;/code&gt;  中。修改 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\examples\dna_viewer_grab_changes_from_scene_and_propagate_to_dna.py&lt;/code&gt;  中的 ROOT_DIR 为 &lt;code&gt;...\MetaHuman-DNA-Calibration-main\&lt;/code&gt; ，CHARACTER_NAME 为源 DNA 文件名，在 Maya Script editor 里运行该 py 脚本，即可生成新的 DNA 文件。&lt;/p&gt;
&lt;h2 id=&#34;dnacalib&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#dnacalib&#34;&gt;#&lt;/a&gt; DNACalib&lt;/h2&gt;
&lt;p&gt;DNACalib 模块用于查看和修改 DNA 文件数据，包含 &lt;code&gt;C++&lt;/code&gt;  api 和转换的 python api，既能使用 Maya 中的 Script Editor，也能在外部 python 编辑器中运行。该模块只适用于 python3.7，若要使用其他 python3 版本，需要用 SWIG 重新封装 &lt;code&gt;C++&lt;/code&gt;  库。&lt;/p&gt;
&lt;p&gt;使用 DNACalib 时，必须导入以下模块&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dna &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; DataLayer_All, FileStream, Status, BinaryStreamReader, BinaryStreamWriter&lt;span class=&#34;comment&#34;&gt;#主要用于读写&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;span class=&#34;comment&#34;&gt;#括号中按需添加模块如RenameJointCommand等&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;读取和写入 DNA 文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#读DNA文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;load_dna&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stream = FileStream(path, FileStream.AccessMode_Read, FileStream.OpenMode_Binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reader = BinaryStreamReader(stream, DataLayer_All)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    reader.read()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; Status.isOk():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        status = Status.get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; RuntimeError(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Error loading DNA: &lt;span class=&#34;subst&#34;&gt;&amp;#123;status.message&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; reader&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#写DNA文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;save_dna&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;reader, path&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    stream = FileStream(path, FileStream.AccessMode_Write, FileStream.OpenMode_Binary)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writer = BinaryStreamWriter(stream)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writer.setFrom(reader)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    writer.write()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; Status.isOk():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        status = Status.get()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;raise&lt;/span&gt; RuntimeError(&lt;span class=&#34;string&#34;&gt;f&amp;quot;Error saving DNA: &lt;span class=&#34;subst&#34;&gt;&amp;#123;status.message&amp;#125;&lt;/span&gt;&amp;quot;&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#读文件示例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dna = load_dna(input_path)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;calibrated = DNACalibDNAReader(dna)&lt;span class=&#34;comment&#34;&gt;#calibrated作为后续命令模块的输入参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;获取 DNA 文件中的组件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#获取全部关节名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_joints&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dna&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    joints = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; jointIndex &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(dna.getJointCount()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        joints.append(dna.getJointName(jointIndex))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; joints&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#获取全部网格体名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_mesh&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dna&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mesh = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; meshIndex &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(dna.getMeshCount()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mesh.append(dna.getMeshName(meshIndex))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; mesh&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#获取全部动画贴图名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_animap&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;dna&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    animap = []&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; ani_index &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(dna.getAnimatedMapCount()):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        animap.append(dna.getAnimatedMapName(ani_index))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; animap&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#涉及获取Metahuman的静态数据(如关节，网格体的名称，数量，层级关系等)的api，可在DefinitionReader.h中查找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all_joint=get_joints(calibrated)&lt;span class=&#34;comment&#34;&gt;#Metahuman头部有865根骨骼&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;father_joint=calibrated.getJointParentIndex(joint_index)&lt;span class=&#34;comment&#34;&gt;#获取父节点索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;joint_position=calibrated.getNeutralJointTranslation(joint_index)&lt;span class=&#34;comment&#34;&gt;#获取关节相对父关节偏移,保存在列表中，单位为cm&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;joint_rotation=calibrated.getNeutralJointRotation(joint_index)&lt;span class=&#34;comment&#34;&gt;#获取关节相对父节点旋转,单位为°&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all_joint_x=calibrated.getNeutralJointTranslationXs()&lt;span class=&#34;comment&#34;&gt;#获取所有关节的偏移x值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;all_mesh=get_mesh(calibrated)&lt;span class=&#34;comment&#34;&gt;#LOD0~LOD7，LOD0包括head,teeth,saliva,eyeLeft,eyeRight,eyeshell,eyelashes,eyeEdge,cartilage&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#涉及控制器绑定相关动态数据的api，可在BehaviorReader.h中查找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bs_channel_lods = calibrated.getBlendShapeChannelLODs()&lt;span class=&#34;comment&#34;&gt;#每个LOD通道的Blendshape数量，只有LOD0有Blendshape，共687个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#涉及获取几何信息的api，可在GeometryReader.h中查找&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bs_tgt_count = calibrated.getBlendShapeTargetCount(mesh_index)&lt;span class=&#34;comment&#34;&gt;#Mesh的Blendshape数量，其中head_lod0_mesh有681个Blendshape&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;bs_tgt_delta_count = calibrated.getBlendShapeTargetDeltaCount(mesh_index,bs_tgt_index)&lt;span class=&#34;comment&#34;&gt;#Blendshape中变形了的顶点数量？？？但没有找到获取这些受影响顶点索引的api&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v_position=calibrated.getVertexPosition(mesh_index,vertex_index)&lt;span class=&#34;comment&#34;&gt;#获取顶点世界位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v_j=calibrated.getSkinWeightsJointIndices(mesh_index,vertex_index)&lt;span class=&#34;comment&#34;&gt;#影响顶点位置的关节索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;v_w=calibrated.getSkinWeightsValues(mesh_index,vertex_index)&lt;span class=&#34;comment&#34;&gt;#获取权重值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;删除 DNA 文件中的组件&lt;/strong&gt;&lt;br&gt;
该部分包括删除关节动画，关节 (Joint)，网格体 (Mesh)，混合变形 (Blend shape)，程序中需要导入相应的命令模块&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RemoveJointAnimationCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RemoveJointCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RemoveMeshCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ClearBlendShapesCommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#删除关节&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = RemoveJointCommand(joint_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;span class=&#34;comment&#34;&gt;#注意删除关节后相关顶点权重不会自动删除，需要手动修改&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#清空Blendshape&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = ClearBlendShapesCommand(joint_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;重命名 DNA 文件中的组件&lt;/strong&gt;&lt;br&gt;
该部分包括重命名动画贴图，关节，网格体，混合变形&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RenameAnimatedMapCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RenameBlendShapeCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RenameJointCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RenameMeshCommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#关节重命名&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = RenameJointCommand(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;NewJointA&amp;quot;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#将索引为10的关节重命名为&amp;quot;NewJointA&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;设置静态的关节和顶点&lt;/strong&gt;&lt;br&gt;
该部分设置静态的关节位姿和顶点位置&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SetNeutralJointRotationsCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SetNeutralJointTranslationsCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SetVertexPositionsCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    VectorOperation_Subtract&lt;span class=&#34;comment&#34;&gt;#向量差，除了Subtract外还有Add,Multiply,Interpolate方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#设置关节位置,只能整体设置数值，使用前需要先设置关节层级，设置关节层级相关api在DefinitionWriter.h中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command=SetNeutralJointTranslationsCommand([[x1,y1,z1],...,[xn,yn,zn]])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#设置顶点位置，只能整体设置，在原始数据的基础上增加或减小，若要直接设置位置值需要使用DefinitionWriter.h中的api&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#new_x=origin_x+pos_x,new_y=origin_y+pos_y,new_z=origin_z+pos_z&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = SetVertexPositionsCommand(mesh_index,pos_x=[x1,...,xn],pos_y=[y1,...,yn],pos_z=[y1,...,yn],VectorOperation_Subtract)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;变换静态的关节和顶点&lt;/strong&gt;&lt;br&gt;
该部分对所有关节和顶点进行整体变换&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    RotateCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ScaleCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TranslateCommand&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#整体相对origin旋转ro&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = RotateCommand(ro=[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;],origin=[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;修正混合变形&lt;/strong&gt;&lt;br&gt;
该部分修改混合变形中的增量值&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; dnacalib &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; (    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    DNACalibDNAReader,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    SetBlendShapeTargetDeltasCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    PruneBlendShapeTargetsCommand,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    VectorOperation_Interpolate&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#blend_shape_target_deltas=[[x1,y1,z1],[x2,y2,z2],...,[xn,yn,zn]]表示目标增量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#mask=[w1,w2,...,wn]表示叠加增量的权重,w=0表示保持顶点原始位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#但函数中没有输入顶点索引,如何设置修改哪些顶点???&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command =  SetBlendShapeTargetDeltasCommand(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mesh_index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        blend_shape_target_index&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        blend_shape_target_deltas,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        masks,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        VectorOperation_Interpolate,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#设置混合变形增量的阈值,当增量绝对值超过阈值时设置为阈值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command=PruneBlendShapeTargetsCommand(threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;所有的命令可以放在一个命令序列中，最终执行一次&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;commands = CommandSequence()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;com1=SetLODsCommand(lods)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commands.add(com1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;com2=CalculateMeshLowerLODsCommand(mesh_index)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commands.add(com2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;commands.run(calibrated)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改后的 DNA 文件不能通过图 4 的方法来更新 Maya 场景，需要使用图 7 所示 DNAViewer 来新建场景。&lt;br&gt;
&lt;strong&gt;（未验证，不一定对）&lt;/strong&gt; 若要将修改后的 DNA 文件导入 UE，首先需要按图 7 方法新建 Maya 场景，并将骨骼和网格体导出至 UE, 修改后的 DNA 文件拖入 UE，选择对应骨骼。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img8.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图8&lt;/center&gt;
&lt;p&gt;打开 Skeletal mesh，Animation Rig 沿用 Metahuman 通用资源即可。&lt;/p&gt;
&lt;div align=&#34;center&#34;&gt; &lt;img data-src=&#34;/2022/12/02/DNAimg/img9.png&#34;&gt; &lt;/div&gt;
&lt;center&gt;图9&lt;/center&gt;
 ]]></description>
        </item>
    </channel>
</rss>
